System.register(['./p-e03ba043.system.js'], function (exports) {
    'use strict';
    var registerInstance, h;
    return {
        setters: [function (module) {
                registerInstance = module.r;
                h = module.h;
            }],
        execute: function () {
            var NumberInput = exports('zui_number_input', /** @class */ (function () {
                function class_1(hostRef) {
                    registerInstance(this, hostRef);
                    /**
                     * minimalNumber is the minimal value it takes
                     * the default value is set to 0 so it will not accept negative numbers
                     */
                    this.minimalNumber = 0;
                }
                /**
                 * handleKeydown makes sure it only accepts numbers
                 */
                class_1.prototype.handleKeyDown = function (ev) {
                    var isNum = /^[a-zA-Z0-9._\b]+$/.test(String.fromCharCode(ev.keyCode));
                    if (ev.key === "ArrowUp" || ev.key === "ArrowDown") {
                        this.numValue = this.numInput.value;
                        return;
                    }
                    else if (!isNum) {
                        ev.preventDefault();
                        return false;
                    }
                    return undefined;
                };
                class_1.prototype.render = function () {
                    return (h("input", { pattern: "\\d*", type: "number", min: this.minimalNumber, placeholder: this.placeholder,
                        // ref={el => (this.numInput = el)}
                        ref: function (el) { return console.log(el); }, value: this.numValue || this.value }));
                };
                Object.defineProperty(class_1, "style", {
                    get: function () { return "STYLE_TEXT_PLACEHOLDER:zui-number-input"; },
                    enumerable: true,
                    configurable: true
                });
                return class_1;
            }()));
            var TextInput = exports('zui_text_input', /** @class */ (function () {
                function class_2(hostRef) {
                    registerInstance(this, hostRef);
                }
                class_2.prototype.handleKeyDown = function () {
                    this.textValue = this.textInput.value;
                };
                class_2.prototype.render = function () {
                    return (h("input", { type: "text", placeholder: this.placeholder,
                        // ref={el => (this.textInput = el)}
                        ref: function (el) { return console.log(el); }, value: this.textValue || this.value }));
                };
                Object.defineProperty(class_2, "style", {
                    get: function () { return "STYLE_TEXT_PLACEHOLDER:zui-text-input"; },
                    enumerable: true,
                    configurable: true
                });
                return class_2;
            }()));
        }
    };
});
